<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/tx/spring-tx-2.5.xsd/spring-spring-tx-2.5.xsd-3.1.2.RELEASE.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util-2.5.xsd"> 


	<!-- objects test inject to pelpEnigne -->

	<bean id="lcctj" class="edu.uoc.pelp.engine.campus.UOC.CampusConnection">
		<constructor-arg type="java.lang.String"
			value="2161e9c05ed2802077dcd1393d9fd7b92ee8ab9956e1f8ac0a0bf0ea095f2141607348473df72348ad90ac931b1793aac1e149198ae92a7cb2042d823d769edc" />
	</bean>
	<!-- TEMPORAL -->
	<bean id="lcct" class="edu.uoc.pelp.test.tempClasses.LocalCampusConnection">
	</bean>
	<!-- FIN TEMPORAL -->

	<bean id="pcpct" class="edu.uoc.pelp.test.tempClasses.PCPelpConfiguration">
	</bean>

	<bean id="bUOC" class="edu.uoc.pelp.bussines.UOC.UOCPelpBussinesImpl">
		<constructor-arg ref="lcctj" />
		<constructor-arg ref="sessionFactory" />
		<constructor-arg ref="pcpct" />
	</bean>

	<!-- service objects -->

	<bean id="pelpService" class="edu.uoc.pelp.services.PelpServiceImpl">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="campusConnection" ref="lcct" />
		<property name="configuration" ref="pcpct" />
		<property name="bussines" ref="bUOC" />
	</bean>

	<!-- ACTIONS -->

	<bean id="teacherSpringAction" class="edu.uoc.pelp.actions.TeacherAction" scope="request">
		<property name="bUOC" ref="bUOC" />
	</bean>
	
	<bean id="deliversSpringAction" class="edu.uoc.pelp.actions.DeliveriesAction" scope="request">
		<property name="bUOC" ref="bUOC" />
	</bean>

	<!-- post-processors for all standard config annotations -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- The singleton hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="packagesToScan">
			<list>
				<value>edu.uoc.pelp.model.vo</value>
                <value>edu.uoc.pelp.model.vo.UOC</value>
                <value>edu.uoc.pelp.model.vo.admin</value>
			</list>
		</property>
	</bean>

	<!-- Spring's hibernate transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- DAOS -->
	
	<bean id="dActivity" class="edu.uoc.pelp.model.dao.ActivityDAO">
		<constructor-arg ref="sessionFactory" />
	</bean>
	<bean id="dAdministrationDAO" class="edu.uoc.pelp.model.dao.admin.AdministrationDAO">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<!-- So classes/functions with @Transactional get a hibernate txn -->
<!-- 	<tx:annotation-driven /> -->
</beans>

