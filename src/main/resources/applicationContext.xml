<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/tx/spring-tx-2.5.xsd/spring-spring-tx-2.5.xsd-3.1.2.RELEASE.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util-2.5.xsd">

	<!-- objects test inject to pelpEnigne -->

	<bean id="lcctj" class="edu.uoc.pelp.engine.campus.UOC.CampusConnection" scope="session">
		<!-- <property name="dao" ref="dAdministrationDAO" /> -->
		<property name="credentials" ref="propertiesUOCApi"/>
		<constructor-arg type="java.lang.String"
			value="6191b9661e160042373c71e53da95783ae5e8bf9b635086fea0b5eb59a411bda0da38a8ade973c66d513cc97b3433b871b3f9cefa910af4a260ed4a6da04ee8" />
	</bean>
	<!-- TEMPORAL -->
	<bean id="lcct" class="edu.uoc.pelp.test.tempClasses.LocalCampusConnection" scope="session">
	</bean>
	<!-- FIN TEMPORAL -->

<!-- 	<bean id="pcpct" class="edu.uoc.pelp.test.tempClasses.PCPelpConfiguration" scope="singleton"> -->
<!-- 	</bean> -->
	
	<bean id="pcpct" class="uoc.edu.pelp.bussines.PelpConfiguracionBO" scope="singleton">
	</bean>

	<bean id="bUOC" class="edu.uoc.pelp.bussines.UOC.UOCPelpBussinesImpl" scope="session">
		<constructor-arg ref="lcctj" />
		<constructor-arg ref="sessionFactory" />
		<constructor-arg ref="pcpct" />
	</bean>
    
    <!--========== UOC Api Properties ==========-->
    <util:properties id="propertiesUOCApi" location="classpath:UOCApi.properties"/>
    <!--========== /UOC Api Properties ==========-->
    
    <bean id="campusConnection" class="edu.uoc.pelp.engine.campus.UOC.CampusConnection" scope="session">
        <property name="credentials" ref="propertiesUOCApi"/>
    </bean>
  
    <!--========== Filters ==========-->
    <!--
    <bean id="loginFilterBean" class="edu.uoc.pelp.servlets.UOC.LoginFilter">
        <property name="bussines" ref="bUOC" />
        <property name="credentials" ref="propertiesUOCApi"/>
    </bean>
    -->
    <!--========== /Filters ==========-->
 
	<!-- service objects -->

	<bean id="pelpService" class="edu.uoc.pelp.services.PelpServiceImpl" scope="singleton">
		<property name="sessionFactory" ref="sessionFactory" />
<!-- 		<property name="campusConnection" ref="lcct" /> -->
		<property name="configuration" ref="pcpct" />
<!-- 		<property name="bussines" ref="bUOC" /> -->
	</bean>

	<!-- ACTIONS -->

	<bean id="teacherSpringAction" class="edu.uoc.pelp.actions.TeacherAction" scope="request">
		<property name="bUOC" ref="bUOC" />
	</bean>
	
	<bean id="deliversSpringAction" class="edu.uoc.pelp.actions.DeliveriesAction" scope="request">
		<property name="bUOC" ref="bUOC" />
	</bean>
	
	<bean id="studentSpringAction" class="edu.uoc.pelp.actions.StudentAction" scope="request">
		<property name="bUOC" ref="bUOC" />
	</bean>
	
	<bean id="pelpSpringAction" class="edu.uoc.pelp.actions.HomeAction" scope="request">
		<property name="bUOC" ref="bUOC" />
	</bean>

	<!-- post-processors for all standard config annotations -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- The singleton hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" scope="singleton">
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="packagesToScan">
			<list>
				<value>edu.uoc.pelp.model.vo</value>
                <value>edu.uoc.pelp.model.vo.UOC</value>
                <value>edu.uoc.pelp.model.vo.admin</value>
			</list>
		</property>
	</bean>

	<!-- Spring's hibernate transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="dActivity" class="edu.uoc.pelp.model.dao.ActivityDAO" >
		<constructor-arg ref="sessionFactory" />
	</bean>
	<bean id="dAdministrationDAO" class="edu.uoc.pelp.model.dao.admin.AdministrationDAO" >
		<constructor-arg ref="sessionFactory" />
	</bean>

	<!-- So classes/functions with @Transactional get a hibernate txn -->
	<!-- 	<tx:annotation-driven /> -->
</beans>

